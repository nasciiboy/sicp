* Tareas generales

  Corregir la apertura y cierre de todos los comandos @, en particular los
  camandos matematicos m y M, enlaces y algunos objetivos @t()

  dentro de los comandos @m y @M substituir @c(f) por ƒ

  Corregir algunos "predicados" colocando parentesis angulares ⟨⟩ siguiendo el
  estilo del pdf original

  Las correcciones deben realizarse tanto en la traduccion como en la region
  comentada "original", al finalizar se reconstruira la version en ingles,
  apartir del fichero de traduccion

* Tareas por colaborador

  agregar tarea siguiendo el formato

  - [ ] - Colaborador encargado :: Tarea que desea realizar :: Seccion
  - [X] - Colaborador encargado :: Tarea concluida          :: Seccion

  Agrege su tarea intercalandola en el orden y posicion que sigue el libro.

  Si la tarea que va a realizar no esta asignada, por ejemplo traducir la
  seccion 3.1, cuando la traduccion va en la seccion 2.5, coloquela al final de
  la lista.

  Si la tarea que va a realizar, tiene que ver con por ejemplo
  revisar/re-traducir una seccion, coloquela justo debajo de donde aparece la
  asignacion original

  Intente no interferir con una tarea sin terminar, a menos que el encargado
  deje de prestar interes por un tiempo razonable o sea una de las pocas tareas
  pendientes

  === TAREAS

  - [X] - nasciiboy :: traduccion :: Unofficial morg Format
  - [X] - nasciiboy :: traduccion :: Dedication
  - [X] - nasciiboy :: traduccion :: Foreword
  - [X] - nasciiboy :: traduccion :: Preface to the Second Edition
  - [X] - nasciiboy :: traduccion :: Preface to the First Edition
  - [X] - nasciiboy :: traduccion :: Acknowledgments
  - [X] - nasciiboy :: traduccion :: Building Abstractions with Procedures
  - [X] - nasciiboy :: traduccion :: Programación en Lisp
  - [X] - nasciiboy :: traduccion :: The Elements of Programming
  - [X] - nasciiboy :: traduccion :: Expressions
  - [X] - nasciiboy :: traduccion :: Naming and the Environment
  - [X] - nasciiboy :: traduccion :: Evaluating Combinations
  - [X] - nasciiboy :: traduccion :: Compound Procedures
  - [X] - nasciiboy :: traduccion :: The Substitution Model for Procedure Application
  - [X] - nasciiboy :: traduccion :: Applicative order versus normal order
  - [X] - nasciiboy :: traduccion :: Conditional Expressions and Predicates
  - [X] - nasciiboy :: traduccion :: Example: Square Roots by Newton's Method
  - [X] - nasciiboy :: traduccion :: Procedures as Black-Box Abstractions
  - [X] - nasciiboy :: traduccion :: Local names
  - [X] - nasciiboy :: traduccion :: Internal definitions and block structure
  - [X] - nasciiboy :: traduccion :: Procedures and the Processes They Generate
  - [X] - nasciiboy :: traduccion :: Linear Recursion and Iteration
  - [X] - nasciiboy :: traduccion :: Tree Recursion
  - [X] - nasciiboy :: traduccion :: Example: Counting change
  - [X] - nasciiboy :: traduccion :: Orders of Growth
  - [X] - nasciiboy :: traduccion :: Exponentiation
  - [X] - nasciiboy :: traduccion :: Greatest Common Divisors
  - [X] - nasciiboy :: traduccion :: Example: Testing for Primality
  - [X] - nasciiboy :: traduccion :: Searching for divisors
  - [X] - nasciiboy :: traduccion :: The Fermat test
  - [X] - nasciiboy :: traduccion :: Probabilistic methods
  - [X] - nasciiboy :: traduccion :: Formulating Abstractions with Higher-Order Procedures
  - [X] - nasciiboy :: traduccion :: Procedures as Arguments
  - [X] - nasciiboy :: traduccion :: Constructing Procedures Using Lambda
  - [X] - nasciiboy :: traduccion :: Using let to create local variables
  - [X] - nasciiboy :: traduccion :: Procedures as General Methods
  - [X] - nasciiboy :: traduccion :: Finding roots of equations by the half-interval method
  - [X] - nasciiboy :: traduccion :: Finding fixed points of functions
  - [X] - nasciiboy :: traduccion :: Procedures as Returned Values
  - [ ] - nasciiboy :: traduccion :: Newton's method
  - [ ] - nasciiboy :: traduccion :: Abstractions and first-class procedures
  - [ ] - nasciiboy :: traduccion :: Building Abstractions with Data
  - [ ] - nasciiboy :: traduccion :: Introduction to Data Abstraction
  - [ ] - nasciiboy :: traduccion :: Example: Arithmetic Operations for Rational Numbers
  - [ ] - nasciiboy :: traduccion :: Pairs
  - [ ] - nasciiboy :: traduccion :: Representing rational numbers
  - [ ] - nasciiboy :: traduccion :: Abstraction Barriers
  - [ ] - nasciiboy :: traduccion :: What Is Meant by Data?
  - [ ] - nasciiboy :: traduccion :: Extended Exercise: Interval Arithmetic
